@page "/"

@layout LoginLayout

<PageTitle>Iniciar Sesión</PageTitle>


<div class="container-fluid p-0 h-100">
    <div class="row justify-content-start align-items-center vh-100 m-0">
        <div class="col-md-6 p-5">
            <RadzenCard Style="padding: 50px; max-width: 100%; box-shadow: 0 14px 15px rgba(0, 0, 0, 0.1);">
                <h2 class="text-center mb-4">Iniciar Sesión</h2>


                @if (!string.IsNullOrEmpty(errorMensaje))
                {
                    <div class="error-message text-center mb-3">
                        @errorMensaje
                    </div>
                }
                <center>
                    <RadzenLabel Text="Usuario" /><br />
                    <RadzenTextBox @bind-Value=@usuario class="w-100" />
                    <br />
                    <br />
                    <RadzenLabel Text="Constraseña" /><br />
                    <RadzenPassword @bind-Value=@contrasena class="w-100" />

                    <br />
                    <br />

                    <RadzenButton Click="IniciarSesion"
                                  Text="Iniciar Sesión"
                                  Icon="login"
                                  ButtonStyle="ButtonStyle.Primary"
                                  class="w-100" IsBusy=cargando />
                </center>
            </RadzenCard>
        </div>
    </div>
</div>



@code {

    string usuario;
    string contrasena;
    string errorMensaje;
    bool cargando = false;
    UsuarioManager usuarioManager;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        usuarioManager = FabricManager.UsuarioManager;
    }

    public async Task IniciarSesion()
    {
        try
        {
            LoginModel credenciales = new LoginModel()
            {
                clave_usuario = contrasena,
                nombre_usuario_login = usuario
            };
            cargando = true;
            errorMensaje = string.Empty;

            var _usuarioConectado = await usuarioManager.Login(credenciales);

            if (_usuarioConectado != null)
            {
                BIZ.sesionUsuario.usuarioConectado = _usuarioConectado;
                Navegador.NavigateTo("/dashboard");
            }
            else
            {
                errorMensaje = usuarioManager.Error;
            }
        }
        catch (Exception ex)
        {
            errorMensaje = $"Error de conexión: {ex.Message}";
        }
        finally
        {
            cargando = false;
            StateHasChanged();
        }
    }
}